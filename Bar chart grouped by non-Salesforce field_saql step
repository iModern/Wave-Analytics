"trend_netnewbusiness": {
                "broadcastFacet": true,
                "datasets": [
                    {
                        "id": "0FbD0000000R6OwKAK",
                        "label": "Contracts with Service Areas with Services New SA/Service Groups",
                        "name": "Contracts_with_Service_Areas_with_Services_New_SA_Service_Groups",
                        "url": "/services/data/v48.0/wave/datasets/0FbD0000000R6OwKAK"
                    }
                ],
                "isGlobal": false,
                "query": {
                    "pigql": "q = load \"Contracts_with_Service_Areas_with_Services_New_SA_Service_Groups\";q = filter q by {{column(selector_GSRServiceArea.selection,[\"Service_Target_Mapping_Lookup_Key_c_textBucket1_te1\"]).asEquality(\"Service_Target_Mapping_Lookup_Key_c_textBucket1_te1\")}};q = filter q by {{column(selector_GSRServiceAreaSubCategory.selection,[\"Service_Target_Mapping_Lookup_Key_c_textBucket2\"]).asEquality(\"Service_Target_Mapping_Lookup_Key_c_textBucket2\")}};q = filter q by {{column(selector_servicearea.selection,[\"Contract_Service_Line__c.Service_Line__c\"]).asEquality(\"Contract_Service_Line__c.Service_Line__c\")}}; TwoYearsAgoWinsQ1 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";TwoYearsAgoWinsQ1 = filter TwoYearsAgoWinsQ1 by date('Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Day') in [dateRange([2018,1,1], [2018,3,31])];\nTwoYearsAgoWinsQ1 = filter TwoYearsAgoWinsQ1 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nTwoYearsAgoWinsQ1 = filter TwoYearsAgoWinsQ1 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\";\nTwoYearsAgoAdjustmentsQ1 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nTwoYearsAgoAdjustmentsQ1 = filter TwoYearsAgoAdjustmentsQ1 by 'Contract_Service_Line__c.Contract__c.Status' == \"Contract Executed\";\nTwoYearsAgoAdjustmentsQ1 = filter TwoYearsAgoAdjustmentsQ1 by date('Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Day') in [dateRange([2018,1,1], [2018,3,31])]; \nTwoYearsAgoAdjustmentsQ1 = filter TwoYearsAgoAdjustmentsQ1 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nTwoYearsAgoAdjustmentsQ1 = filter TwoYearsAgoAdjustmentsQ1 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\"; \n\nTwoYearsAgoQ1 = cogroup TwoYearsAgoWinsQ1 by all full, TwoYearsAgoAdjustmentsQ1 by all;\nTwoYearsAgoQ1 = foreach TwoYearsAgoQ1 generate coalesce(sum(TwoYearsAgoWinsQ1['Proposal_Award_Amount_Service__c']),0) + coalesce(sum(TwoYearsAgoAdjustmentsQ1['ContractRegionalServiceExecutedAdjustmentFormula']),0) as 'sum_NetNewBusiness',\"2018 Q1\" as 'Date';\n\nTwoYearsAgoWinsQ2 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nTwoYearsAgoWinsQ2 = filter TwoYearsAgoWinsQ2 by date('Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Day') in [dateRange([2018,4,1], [2018,6,30])];\nTwoYearsAgoWinsQ2 = filter TwoYearsAgoWinsQ2 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nTwoYearsAgoWinsQ2 = filter TwoYearsAgoWinsQ2 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\";\nTwoYearsAgoAdjustmentsQ2 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nTwoYearsAgoAdjustmentsQ2 = filter TwoYearsAgoAdjustmentsQ2 by 'Contract_Service_Line__c.Contract__c.Status' == \"Contract Executed\";\nTwoYearsAgoAdjustmentsQ2 = filter TwoYearsAgoAdjustmentsQ2 by date('Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Day') in [dateRange([2018,4,1], [2018,6,30])]; \nTwoYearsAgoAdjustmentsQ2 = filter TwoYearsAgoAdjustmentsQ2 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nTwoYearsAgoAdjustmentsQ2 = filter TwoYearsAgoAdjustmentsQ2 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\"; \n\nTwoYearsAgoQ2 = cogroup TwoYearsAgoWinsQ2 by all full, TwoYearsAgoAdjustmentsQ2 by all;\nTwoYearsAgoQ2 = foreach TwoYearsAgoQ2 generate coalesce(sum(TwoYearsAgoWinsQ2['Proposal_Award_Amount_Service__c']),0) + coalesce(sum(TwoYearsAgoAdjustmentsQ2['ContractRegionalServiceExecutedAdjustmentFormula']),0) as 'sum_NetNewBusiness',\"2018 Q2\" as 'Date';\n\nTwoYearsAgoWinsQ3 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nTwoYearsAgoWinsQ3 = filter TwoYearsAgoWinsQ3 by date('Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Day') in [dateRange([2018,7,1], [2018,9,30])];\nTwoYearsAgoWinsQ3 = filter TwoYearsAgoWinsQ3 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nTwoYearsAgoWinsQ3 = filter TwoYearsAgoWinsQ3 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\";\nTwoYearsAgoAdjustmentsQ3 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nTwoYearsAgoAdjustmentsQ3 = filter TwoYearsAgoAdjustmentsQ3 by 'Contract_Service_Line__c.Contract__c.Status' == \"Contract Executed\";\nTwoYearsAgoAdjustmentsQ3 = filter TwoYearsAgoAdjustmentsQ3 by date('Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Day') in [dateRange([2018,7,1], [2018,9,30])];\nTwoYearsAgoAdjustmentsQ3 = filter TwoYearsAgoAdjustmentsQ3 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nTwoYearsAgoAdjustmentsQ3 = filter TwoYearsAgoAdjustmentsQ3 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\"; \n\nTwoYearsAgoQ3 = cogroup TwoYearsAgoWinsQ3 by all full, TwoYearsAgoAdjustmentsQ3 by all;\nTwoYearsAgoQ3 = foreach TwoYearsAgoQ3 generate coalesce(sum(TwoYearsAgoWinsQ3['Proposal_Award_Amount_Service__c']),0) + coalesce(sum(TwoYearsAgoAdjustmentsQ3['ContractRegionalServiceExecutedAdjustmentFormula']),0) as 'sum_NetNewBusiness',\"2018 Q3\" as 'Date';\n\nTwoYearsAgoWinsQ4 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nTwoYearsAgoWinsQ4 = filter TwoYearsAgoWinsQ4 by date('Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Day') in [dateRange([2018,10,1], [2018,12,31])];\nTwoYearsAgoWinsQ4 = filter TwoYearsAgoWinsQ4 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nTwoYearsAgoWinsQ4 = filter TwoYearsAgoWinsQ4 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\";\nTwoYearsAgoAdjustmentsQ4 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nTwoYearsAgoAdjustmentsQ4 = filter TwoYearsAgoAdjustmentsQ4 by 'Contract_Service_Line__c.Contract__c.Status' == \"Contract Executed\";\nTwoYearsAgoAdjustmentsQ4 = filter TwoYearsAgoAdjustmentsQ4 by date('Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Day') in [dateRange([2018,10,1], [2018,12,31])]; \nTwoYearsAgoAdjustmentsQ4 = filter TwoYearsAgoAdjustmentsQ4 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nTwoYearsAgoAdjustmentsQ4 = filter TwoYearsAgoAdjustmentsQ4 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\"; \n\nTwoYearsAgoQ4 = cogroup TwoYearsAgoWinsQ4 by all full, TwoYearsAgoAdjustmentsQ4 by all;\nTwoYearsAgoQ4 = foreach TwoYearsAgoQ4 generate coalesce(sum(TwoYearsAgoWinsQ4['Proposal_Award_Amount_Service__c']),0) + coalesce(sum(TwoYearsAgoAdjustmentsQ4['ContractRegionalServiceExecutedAdjustmentFormula']),0) as 'sum_NetNewBusiness',\"2018 Q4\" as 'Date'; LastYearWinsQ1 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nLastYearWinsQ1 = filter LastYearWinsQ1 by date('Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Day') in [dateRange([2019,1,1], [2019,3,31])];\nLastYearWinsQ1 = filter LastYearWinsQ1 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nLastYearWinsQ1 = filter LastYearWinsQ1 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\";\nLastYearAdjustmentsQ1 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nLastYearAdjustmentsQ1 = filter LastYearAdjustmentsQ1 by 'Contract_Service_Line__c.Contract__c.Status' == \"Contract Executed\";\nLastYearAdjustmentsQ1 = filter LastYearAdjustmentsQ1 by date('Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Day') in [dateRange([2019,1,1], [2019,3,31])]; \nLastYearAdjustmentsQ1 = filter LastYearAdjustmentsQ1 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nLastYearAdjustmentsQ1 = filter LastYearAdjustmentsQ1 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\"; \n\nLastYearQ1 = cogroup LastYearWinsQ1 by all full, LastYearAdjustmentsQ1 by all;\nLastYearQ1 = foreach LastYearQ1 generate coalesce(sum(LastYearWinsQ1['Proposal_Award_Amount_Service__c']),0) + coalesce(sum(LastYearAdjustmentsQ1['ContractRegionalServiceExecutedAdjustmentFormula']),0) as 'sum_NetNewBusiness',\"2019 Q1\" as 'Date';\n\nLastYearWinsQ2 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nLastYearWinsQ2 = filter LastYearWinsQ2 by date('Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Day') in [dateRange([2019,4,1], [2019,6,30])];\nLastYearWinsQ2 = filter LastYearWinsQ2 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nLastYearWinsQ2 = filter LastYearWinsQ2 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\";\nLastYearAdjustmentsQ2 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nLastYearAdjustmentsQ2 = filter LastYearAdjustmentsQ2 by 'Contract_Service_Line__c.Contract__c.Status' == \"Contract Executed\";\nLastYearAdjustmentsQ2 = filter LastYearAdjustmentsQ2 by date('Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Day') in [dateRange([2019,4,1], [2019,6,30])]; \nLastYearAdjustmentsQ2 = filter LastYearAdjustmentsQ2 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nLastYearAdjustmentsQ2 = filter LastYearAdjustmentsQ2 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\"; \n\nLastYearQ2 = cogroup LastYearWinsQ2 by all full, LastYearAdjustmentsQ2 by all;\nLastYearQ2 = foreach LastYearQ2 generate coalesce(sum(LastYearWinsQ2['Proposal_Award_Amount_Service__c']),0) + coalesce(sum(LastYearAdjustmentsQ2['ContractRegionalServiceExecutedAdjustmentFormula']),0) as 'sum_NetNewBusiness',\"2019 Q2\" as 'Date';\n\nLastYearWinsQ3 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nLastYearWinsQ3 = filter LastYearWinsQ3 by date('Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Day') in [dateRange([2019,7,1], [2019,9,30])];\nLastYearWinsQ3 = filter LastYearWinsQ3 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nLastYearWinsQ3 = filter LastYearWinsQ3 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\";\nLastYearAdjustmentsQ3 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nLastYearAdjustmentsQ3 = filter LastYearAdjustmentsQ3 by 'Contract_Service_Line__c.Contract__c.Status' == \"Contract Executed\";\nLastYearAdjustmentsQ3 = filter LastYearAdjustmentsQ3 by date('Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Day') in [dateRange([2019,7,1], [2019,9,30])]; \nLastYearAdjustmentsQ3 = filter LastYearAdjustmentsQ3 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nLastYearAdjustmentsQ3 = filter LastYearAdjustmentsQ3 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\"; \n\nLastYearQ3 = cogroup LastYearWinsQ3 by all full, LastYearAdjustmentsQ3 by all;\nLastYearQ3 = foreach LastYearQ3 generate coalesce(sum(LastYearWinsQ3['Proposal_Award_Amount_Service__c']),0) + coalesce(sum(LastYearAdjustmentsQ3['ContractRegionalServiceExecutedAdjustmentFormula']),0) as 'sum_NetNewBusiness',\"2019 Q3\" as 'Date';\n\nLastYearWinsQ4 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nLastYearWinsQ4 = filter LastYearWinsQ4 by date('Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Day') in [dateRange([2019,10,1], [2019,12,31])];\nLastYearWinsQ4 = filter LastYearWinsQ4 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nLastYearWinsQ4 = filter LastYearWinsQ4 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\";\nLastYearAdjustmentsQ4 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nLastYearAdjustmentsQ4 = filter LastYearAdjustmentsQ4 by 'Contract_Service_Line__c.Contract__c.Status' == \"Contract Executed\";\nLastYearAdjustmentsQ4 = filter LastYearAdjustmentsQ4 by date('Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Day') in [dateRange([2019,10,1], [2019,12,31])]; \nLastYearAdjustmentsQ4 = filter LastYearAdjustmentsQ4 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nLastYearAdjustmentsQ4 = filter LastYearAdjustmentsQ4 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\"; \n\nLastYearQ4 = cogroup LastYearWinsQ4 by all full, LastYearAdjustmentsQ4 by all;\nLastYearQ4 = foreach LastYearQ4 generate coalesce(sum(LastYearWinsQ4['Proposal_Award_Amount_Service__c']),0) + coalesce(sum(LastYearAdjustmentsQ4['ContractRegionalServiceExecutedAdjustmentFormula']),0) as 'sum_NetNewBusiness',\"2019 Q4\" as 'Date';\n\nThisYearWinsQ1 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nThisYearWinsQ1 = filter ThisYearWinsQ1 by date('Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Day') in [dateRange([2020,1,1], [2020,3,31])];\nThisYearWinsQ1 = filter ThisYearWinsQ1 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nThisYearWinsQ1 = filter ThisYearWinsQ1 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\";\nThisYearAdjustmentsQ1 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nThisYearAdjustmentsQ1 = filter ThisYearAdjustmentsQ1 by 'Contract_Service_Line__c.Contract__c.Status' == \"Contract Executed\";\nThisYearAdjustmentsQ1 = filter ThisYearAdjustmentsQ1 by date('Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Day') in [dateRange([2020,1,1], [2020,3,31])]; \nThisYearAdjustmentsQ1 = filter ThisYearAdjustmentsQ1 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nThisYearAdjustmentsQ1 = filter ThisYearAdjustmentsQ1 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\"; \n\nThisYearQ1 = cogroup ThisYearWinsQ1 by all full, ThisYearAdjustmentsQ1 by all;\nThisYearQ1 = foreach ThisYearQ1 generate coalesce(sum(ThisYearWinsQ1['Proposal_Award_Amount_Service__c']),0) + coalesce(sum(ThisYearAdjustmentsQ1['ContractRegionalServiceExecutedAdjustmentFormula']),0) as 'sum_NetNewBusiness',\"2020 Q1\" as 'Date';\n\nThisYearWinsQ2 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nThisYearWinsQ2 = filter ThisYearWinsQ2 by date('Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Day') in [dateRange([2020,4,1], [2020,6,30])];\nThisYearWinsQ2 = filter ThisYearWinsQ2 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nThisYearWinsQ2 = filter ThisYearWinsQ2 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\";\nThisYearAdjustmentsQ2 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nThisYearAdjustmentsQ2 = filter ThisYearAdjustmentsQ2 by 'Contract_Service_Line__c.Contract__c.Status' == \"Contract Executed\";\nThisYearAdjustmentsQ2 = filter ThisYearAdjustmentsQ2 by date('Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Day') in [dateRange([2020,4,1], [2020,6,30])]; \nThisYearAdjustmentsQ2 = filter ThisYearAdjustmentsQ2 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nThisYearAdjustmentsQ2 = filter ThisYearAdjustmentsQ2 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\"; \n\nThisYearQ2 = cogroup ThisYearWinsQ2 by all full, ThisYearAdjustmentsQ2 by all;\nThisYearQ2 = foreach ThisYearQ2 generate coalesce(sum(ThisYearWinsQ2['Proposal_Award_Amount_Service__c']),0) + coalesce(sum(ThisYearAdjustmentsQ2['ContractRegionalServiceExecutedAdjustmentFormula']),0) as 'sum_NetNewBusiness',\"2020 Q2\" as 'Date';\n\nThisYearWinsQ3 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nThisYearWinsQ3 = filter ThisYearWinsQ3 by date('Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Day') in [dateRange([2020,7,1], [2020,9,30])];\nThisYearWinsQ3 = filter ThisYearWinsQ3 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nThisYearWinsQ3 = filter ThisYearWinsQ3 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\";\nThisYearAdjustmentsQ3 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nThisYearAdjustmentsQ3 = filter ThisYearAdjustmentsQ3 by 'Contract_Service_Line__c.Contract__c.Status' == \"Contract Executed\";\nThisYearAdjustmentsQ3 = filter ThisYearAdjustmentsQ3 by date('Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Day') in [dateRange([2020,7,1], [2020,9,30])]; \nThisYearAdjustmentsQ3 = filter ThisYearAdjustmentsQ3 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nThisYearAdjustmentsQ3 = filter ThisYearAdjustmentsQ3 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\"; \n\nThisYearQ3 = cogroup ThisYearWinsQ3 by all full, ThisYearAdjustmentsQ3 by all;\nThisYearQ3 = foreach ThisYearQ3 generate coalesce(sum(ThisYearWinsQ3['Proposal_Award_Amount_Service__c']),0) + coalesce(sum(ThisYearAdjustmentsQ3['ContractRegionalServiceExecutedAdjustmentFormula']),0) as 'sum_NetNewBusiness',\"2020 Q3\" as 'Date';\n\nThisYearWinsQ4 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nThisYearWinsQ4 = filter ThisYearWinsQ4 by date('Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Day') in [dateRange([2020,10,1], [2020,12,31])];\nThisYearWinsQ4 = filter ThisYearWinsQ4 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nThisYearWinsQ4 = filter ThisYearWinsQ4 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\";\nThisYearAdjustmentsQ4 = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\";\nThisYearAdjustmentsQ4 = filter ThisYearAdjustmentsQ4 by 'Contract_Service_Line__c.Contract__c.Status' == \"Contract Executed\";\nThisYearAdjustmentsQ4 = filter ThisYearAdjustmentsQ4 by date('Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Day') in [dateRange([2020,10,1], [2020,12,31])]; \nThisYearAdjustmentsQ4 = filter ThisYearAdjustmentsQ4 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\";\nThisYearAdjustmentsQ4 = filter ThisYearAdjustmentsQ4 by 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\"; \n\nThisYearQ4 = cogroup ThisYearWinsQ4 by all full, ThisYearAdjustmentsQ4 by all;\nThisYearQ4 = foreach ThisYearQ4 generate coalesce(sum(ThisYearWinsQ4['Proposal_Award_Amount_Service__c']),0) + coalesce(sum(ThisYearAdjustmentsQ4['ContractRegionalServiceExecutedAdjustmentFormula']),0) as 'sum_NetNewBusiness',\"2020 Q4\" as 'Date';\n\nTrend = union TwoYearsAgoQ1,TwoYearsAgoQ2,TwoYearsAgoQ3,TwoYearsAgoQ4,LastYearQ1,LastYearQ2,LastYearQ3,LastYearQ4,ThisYearQ1,ThisYearQ2,ThisYearQ3,ThisYearQ4;",
                    "measures": [
                        [
                            "count",
                            "*",
                            "sum_NetNewBusiness"
                        ]
                    ],
                    "measuresMap": {},
                    "groups": [
                        "Date"
                    ]
                },
                "receiveFacetSource": {
                    "mode": "none",
                    "steps": []
                },
                "selectMode": "single",
                "type": "aggregateflex",
                "useGlobal": true,
                "visualizationParameters": {
                    "options": {}
                }
            },
