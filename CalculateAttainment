"CalculateAttainment_NullFix": {
                "broadcastFacet": true,
                "groups": [],
                "label": "CalculateAttainment_NullFix",
                "numbers": [],
                "query": "q = load \"Contracts_with_Service_Areas_with_Services_New_SA_Service_Groups\"; q = filter q by {{column(selector_IBDNonIBD.selection,[\"IBD_NonIBD_Bucket\"]).asEquality(\"IBD_NonIBD_Bucket\")}}; q = filter q by {{column(selector_AERegion.selection,[\"AE_Continental_Region_Bucket\"]).asEquality(\"AE_Continental_Region_Bucket\")}}; q = filter q by {{column(selector_salesregion.selection,[\"AE_Region_Bucket\"]).asEquality(\"AE_Region_Bucket\")}}; q = filter q by {{column(selector_serviceareaAE.selection,[\"Service_Area_Account_Executive__c.Name\"]).asEquality(\"Contract_Service_Line__c.Service_Area_Account_Executive__c.Name\")}}; q = filter q by {{column(selector_serviceareaaeservicearea.selection,[\"Service_Area_Account_Executive__c.Service_Area__c\"]).asEquality(\"Contract_Service_Line__c.Service_Area_Account_Executive__c.Service_Area__c\")}}; q = filter q by {{column(selector_FunctionalSolutionsOpp.selection,[\"Opportunity_ID_c_Functional_Solutions_Opportunity\"]).asEquality(\"Contract_Service_Line_c_Contract_c_Related_Oppor\")}}; q = filter q by {{column(selector_functionalsolutionsteam.selection,[\"Service_Area_Service_Analytics_c_textBucket1\"]).asEquality(\"Service_Target_Mapping_Lookup_Key_c_textBucket3\")}}; \nq_A = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\" && {{cell(step_relative_date.selection, 0, \"saql_step_value\").asDateRange(\"date('Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Proposal_Awarded_Date__c_Day')\")}} && 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\" && 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\";\nq_B = filter q by 'Contract_Service_Line__c.Contract__c.Latest_Version__c' == \"true\" && 'Contract_Service_Line__c.Contract__c.Status' == \"Contract Executed\" && {{cell(step_relative_date.selection, 0, \"saql_step_value\").asDateRange(\"date('Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Year', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Month', 'Contract_Service_Line__c.Contract__c.Contract_Execution_Date__c_Day')\")}} && 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.Primary_Scenario__c' == \"true\" && 'Contract_Service_Line__c.Contract__c.Related_Opportunity__c.StageName' == \"Closed Won\"; t = load \"TARGETS\"; t = filter t by {{column(selector_IBDNonIBD.selection,[\"IBD_NonIBD_Bucket\"]).asEquality(\"IBD_NonIBD\")}}; t = filter t by {{column(selector_AERegion.selection,[\"AE_Continental_Region_Bucket\"]).asEquality(\"Region\")}}; t = filter t by {{column(selector_salesregion.selection,[\"AE_Region_Bucket\"]).asEquality(\"Sales_Region\")}}; t = filter t by {{column(selector_serviceareaAE.selection,[\"Service_Area_Account_Executive__c.Name\"]).asEquality(\"Label\")}}; t = filter t by {{column(selector_serviceareaaeservicearea.selection,[\"Service_Area_Account_Executive__c.Service_Area__c\"]).asEquality(\"Service_Area_AE_Service_Area\")}}; t = filter t by {{column(selector_FunctionalSolutionsOpp.selection,[\"Opportunity_ID_c_Functional_Solutions_Opportunity\"]).asEquality(\"Functional_Solutions\")}}; t = filter t by {{column(selector_functionalsolutionsteam.selection,[\"Service_Area_Service_Analytics_c_textBucket1\"]).asEquality(\"Sub_Label\")}}; t = filter t by {{cell(step_relative_date.selection, 0, \"saql_step_value\").asDateRange(\"date('Date_Year', 'Date_Month', 'Date_Day')\")}}; t = filter t by 'Target_Bucket' == \"Global Sales Dashboard\";\nresult = group q_A by all full, q_B by all, t by all;\nresult = foreach result generate coalesce(sum(q_A.'Proposal_Award_Amount_Service__c'),0) as 'A', coalesce(sum(q_B.'ContractRegionalServiceExecutedAdjustmentFormula'),0) as 'B', coalesce(sum(t.'Amount'),0) as 'C';\nresult = foreach result generate coalesce(coalesce(A,0)+coalesce(B,0),0)/C as 'Attainment';",
                "receiveFacetSource": {
                    "mode": "all",
                    "steps": []
                },
                "selectMode": "single",
                "strings": [],
                "type": "saql",
                "useGlobal": true,
                "visualizationParameters": {
                    "parameters": {
                        "borderColor": "#e0e5ee",
                        "borderWidth": 1,
                        "cell": {
                            "backgroundColor": "#ffffff",
                            "fontColor": "#16325c",
                            "fontSize": 12
                        },
                        "columnProperties": {},
                        "columns": [
                            "C"
                        ],
                        "customBulkActions": [],
                        "header": {
                            "backgroundColor": "#f4f6f9",
                            "fontColor": "#16325c",
                            "fontSize": 12
                        },
                        "innerMajorBorderColor": "#a8b7c7",
                        "innerMinorBorderColor": "#e0e5ee",
                        "maxColumnWidth": 300,
                        "minColumnWidth": 40,
                        "mode": "variable",
                        "numberOfLines": 1,
                        "showActionMenu": true,
                        "verticalPadding": 8
                    },
                    "type": "table"
                }
            },
